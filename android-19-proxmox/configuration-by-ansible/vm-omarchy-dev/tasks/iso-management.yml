---
# ISO management tasks for Omarchy

- name: Ensure ISO storage directory exists
  ansible.builtin.file:
    path: "{{ iso_storage_path }}"
    state: directory
    mode: '0755'

- name: Check if Omarchy ISO already exists
  ansible.builtin.stat:
    path: "{{ iso_storage_path }}/{{ omarchy_iso_name }}"
  register: iso_file

- name: Download Omarchy ISO to Proxmox storage (background)
  ansible.builtin.shell: |
    nohup wget -O "{{ iso_storage_path }}/{{ omarchy_iso_name }}.tmp" "{{ omarchy_iso_url }}" > /tmp/omarchy-iso-download.log 2>&1 && \
    mv "{{ iso_storage_path }}/{{ omarchy_iso_name }}.tmp" "{{ iso_storage_path }}/{{ omarchy_iso_name }}" &
  when: not iso_file.stat.exists
  register: iso_download_started
  changed_when: true

- name: Wait for ISO download to complete
  ansible.builtin.wait_for:
    path: "{{ iso_storage_path }}/{{ omarchy_iso_name }}"
    timeout: 1800  # 30 minutes timeout for large ISOs
  when: not iso_file.stat.exists
  register: iso_download

- name: Display ISO status
  ansible.builtin.debug:
    msg: >
      {% if iso_download_started.changed | default(false) %}
      Omarchy ISO downloaded successfully to {{ iso_storage_path }}/{{ omarchy_iso_name }}
      {% else %}
      Omarchy ISO already exists at {{ iso_storage_path }}/{{ omarchy_iso_name }}
      {% endif %}

- name: Verify ISO appears in Proxmox storage
  ansible.builtin.command: pvesm list {{ proxmox_iso_storage }}
  register: storage_list
  changed_when: false

- name: Confirm ISO is available
  ansible.builtin.assert:
    that:
      - omarchy_iso_name in storage_list.stdout
    fail_msg: "ISO not found in Proxmox storage {{ proxmox_iso_storage }}. Check storage configuration."
    success_msg: "ISO successfully available in Proxmox storage {{ proxmox_iso_storage }}."