---
# Update initramfs to include VFIO modules

- name: Add VFIO modules to initramfs configuration
  ansible.builtin.lineinfile:
    path: /etc/initramfs-tools/modules
    line: "{{ item }}"
    create: yes
    mode: '0644'
  loop:
    - vfio
    - vfio_iommu_type1
    - vfio_pci
    - vfio_virqfd
  register: initramfs_modules_config

- name: Check if VFIO modules are already in initramfs
  ansible.builtin.shell:
    cmd: lsinitramfs /boot/initrd.img-$(uname -r) | grep -q vfio
  register: vfio_in_initramfs
  changed_when: false
  failed_when: false

- name: Get current initramfs timestamp before update
  ansible.builtin.stat:
    path: /boot/initrd.img-{{ ansible_kernel }}
  register: initramfs_before
  when: vfio_in_initramfs.rc != 0 or initramfs_modules_config is changed

- name: Update initramfs to include VFIO modules
  ansible.builtin.command:
    cmd: update-initramfs -u -k all
  register: update_initramfs_result
  when: vfio_in_initramfs.rc != 0 or initramfs_modules_config is changed
  changed_when: true

- name: Display update-initramfs output
  ansible.builtin.debug:
    msg: "{{ update_initramfs_result.stdout_lines }}"
  when: update_initramfs_result is defined and update_initramfs_result is not skipped

- name: Get initramfs timestamp after update
  ansible.builtin.stat:
    path: /boot/initrd.img-{{ ansible_kernel }}
  register: initramfs_after
  when: update_initramfs_result is defined and update_initramfs_result is not skipped

- name: Verify initramfs was updated (timestamp changed)
  ansible.builtin.assert:
    that:
      - initramfs_after.stat.mtime > initramfs_before.stat.mtime
    fail_msg: "initramfs timestamp did not change after update"
    success_msg: "initramfs successfully updated"
  when: update_initramfs_result is defined and update_initramfs_result is not skipped

- name: Verify VFIO modules are now in initramfs
  ansible.builtin.shell:
    cmd: lsinitramfs /boot/initrd.img-$(uname -r) | grep vfio
  register: vfio_verify
  changed_when: false
  when: update_initramfs_result is defined and update_initramfs_result is not skipped

- name: Display VFIO modules found in initramfs
  ansible.builtin.debug:
    msg: "{{ vfio_verify.stdout_lines }}"
  when: vfio_verify is defined and vfio_verify.stdout_lines is defined

- name: Reboot system to load VFIO modules from initramfs
  ansible.builtin.reboot:
    reboot_timeout: 300
    connect_timeout: 20
    post_reboot_delay: 15
    msg: "Rebooting to load VFIO modules from initramfs"
  when: update_initramfs_result is defined and update_initramfs_result is not skipped

- name: Verify VFIO modules are loaded after reboot
  ansible.builtin.shell:
    cmd: lsmod | grep vfio
  register: vfio_loaded
  changed_when: false
  when: update_initramfs_result is defined and update_initramfs_result is not skipped

- name: Display loaded VFIO modules
  ansible.builtin.debug:
    msg: "{{ vfio_loaded.stdout_lines }}"
  when: vfio_loaded is defined and vfio_loaded.stdout_lines is defined

- name: Verify all VFIO modules are loaded
  ansible.builtin.assert:
    that:
      - "'vfio_pci' in vfio_loaded.stdout"
      - "'vfio_iommu_type1' in vfio_loaded.stdout"
      - "'vfio ' in vfio_loaded.stdout or 'vfio\n' in vfio_loaded.stdout"
    fail_msg: "Not all VFIO modules are loaded after reboot"
    success_msg: "All VFIO modules successfully loaded from initramfs"
  when: vfio_loaded is defined and vfio_loaded.stdout is defined
