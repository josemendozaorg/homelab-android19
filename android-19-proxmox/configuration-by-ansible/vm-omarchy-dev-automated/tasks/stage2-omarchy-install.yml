---
# Stage 2: Automated Omarchy Installation
# Installs Omarchy on top of Arch Linux via SSH

- name: Display Stage 2 status
  ansible.builtin.debug:
    msg: |
      ðŸš€ STAGE 2: Automated Omarchy Installation

      Target: {{ arch_user }}@{{ omarchy_vm_automated.ip }}
      Method: Official Omarchy install script via SSH

      This stage will:
      1. Connect to installed Arch Linux system
      2. Download and execute Omarchy install script
      3. Configure Google Remote Desktop (optional)
      4. Verify Omarchy installation

- name: Verify SSH connection to Arch Linux system
  ansible.builtin.ping:
  delegate_to: "{{ omarchy_vm_automated.ip }}"
  vars:
    ansible_user: "{{ arch_user }}"
    ansible_ssh_pass: "{{ arch_password }}"
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

- name: Update system packages
  ansible.builtin.pacman:
    update_cache: yes
    upgrade: yes
  delegate_to: "{{ omarchy_vm_automated.ip }}"
  vars:
    ansible_user: "{{ arch_user }}"
    ansible_ssh_pass: "{{ arch_password }}"
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
    ansible_become: yes
    ansible_become_pass: "{{ arch_password }}"

- name: Install required packages for Omarchy
  ansible.builtin.pacman:
    name:
      - wget
      - curl
      - git
      - base-devel
    state: present
  delegate_to: "{{ omarchy_vm_automated.ip }}"
  vars:
    ansible_user: "{{ arch_user }}"
    ansible_ssh_pass: "{{ arch_password }}"
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
    ansible_become: yes
    ansible_become_pass: "{{ arch_password }}"

- name: Download and execute Omarchy installation script
  block:
    - name: Download Omarchy install script
      ansible.builtin.get_url:
        url: "{{ omarchy_install_script_url }}"
        dest: /tmp/omarchy-install.sh
        mode: '0755'
      delegate_to: "{{ omarchy_vm_automated.ip }}"
      vars:
        ansible_user: "{{ arch_user }}"
        ansible_ssh_pass: "{{ arch_password }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

    - name: Execute Omarchy installation script
      ansible.builtin.shell: |
        bash /tmp/omarchy-install.sh
      delegate_to: "{{ omarchy_vm_automated.ip }}"
      vars:
        ansible_user: "{{ arch_user }}"
        ansible_ssh_pass: "{{ arch_password }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      async: "{{ omarchy_install_timeout }}"
      poll: 30
      register: omarchy_install_result

    - name: Display Omarchy installation progress
      ansible.builtin.debug:
        msg: |
          ðŸ”„ Omarchy Installation In Progress...

          This may take up to {{ omarchy_install_timeout / 60 }} minutes.
          The script will install:
          - Hyprland window manager
          - Development tools and environments
          - Omarchy-specific configurations

          Monitor progress via SSH: ssh {{ arch_user }}@{{ omarchy_vm_automated.ip }}

- name: Configure Google Remote Desktop (optional)
  block:
    - name: Install Google Chrome Remote Desktop dependencies
      ansible.builtin.pacman:
        name:
          - xorg-server-xvfb
          - xorg-randr
          - python-psutil
        state: present
      delegate_to: "{{ omarchy_vm_automated.ip }}"
      vars:
        ansible_user: "{{ arch_user }}"
        ansible_ssh_pass: "{{ arch_password }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        ansible_become: yes
        ansible_become_pass: "{{ arch_password }}"

    - name: Create AUR build directory
      ansible.builtin.file:
        path: /tmp/aur-build/chrome-remote-desktop
        state: directory
        mode: '0755'
      delegate_to: "{{ omarchy_vm_automated.ip }}"
      vars:
        ansible_user: "{{ arch_user }}"
        ansible_ssh_pass: "{{ arch_password }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

    - name: Download Chrome Remote Desktop PKGBUILD
      ansible.builtin.get_url:
        url: "https://aur.archlinux.org/cgit/aur.git/snapshot/chrome-remote-desktop.tar.gz"
        dest: /tmp/chrome-remote-desktop.tar.gz
      delegate_to: "{{ omarchy_vm_automated.ip }}"
      vars:
        ansible_user: "{{ arch_user }}"
        ansible_ssh_pass: "{{ arch_password }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

    - name: Extract Chrome Remote Desktop package
      ansible.builtin.unarchive:
        src: /tmp/chrome-remote-desktop.tar.gz
        dest: /tmp/aur-build/
        remote_src: yes
      delegate_to: "{{ omarchy_vm_automated.ip }}"
      vars:
        ansible_user: "{{ arch_user }}"
        ansible_ssh_pass: "{{ arch_password }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

    - name: Build and install Chrome Remote Desktop
      ansible.builtin.shell: |
        cd /tmp/aur-build/chrome-remote-desktop
        makepkg -si --noconfirm --skipchecksums
      delegate_to: "{{ omarchy_vm_automated.ip }}"
      vars:
        ansible_user: "{{ arch_user }}"
        ansible_ssh_pass: "{{ arch_password }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        ansible_become: yes
        ansible_become_pass: "{{ arch_password }}"

    - name: Configure Hyprland for Remote Desktop
      ansible.builtin.copy:
        content: |
          #!/bin/bash
          export DISPLAY=:20
          exec Hyprland
        dest: "/home/{{ arch_user }}/.chrome-remote-desktop-session"
        mode: '0755'
        owner: "{{ arch_user }}"
        group: "{{ arch_user }}"
      delegate_to: "{{ omarchy_vm_automated.ip }}"
      vars:
        ansible_user: "{{ arch_user }}"
        ansible_ssh_pass: "{{ arch_password }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        ansible_become: yes
        ansible_become_pass: "{{ arch_password }}"

  when: omarchy_enable_remote_desktop | default(true)

- name: Verify Omarchy installation
  block:
    - name: Check Hyprland installation
      ansible.builtin.command: which Hyprland
      register: hyprland_check
      delegate_to: "{{ omarchy_vm_automated.ip }}"
      vars:
        ansible_user: "{{ arch_user }}"
        ansible_ssh_pass: "{{ arch_password }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

    - name: Check Omarchy configuration
      ansible.builtin.stat:
        path: "/home/{{ arch_user }}/.config/hypr/hyprland.conf"
      register: omarchy_config_check
      delegate_to: "{{ omarchy_vm_automated.ip }}"
      vars:
        ansible_user: "{{ arch_user }}"
        ansible_ssh_pass: "{{ arch_password }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

    - name: Display Stage 2 completion
      ansible.builtin.debug:
        msg: |
          âœ… STAGE 2 COMPLETE: Omarchy Installation

          Hyprland: {{ 'Installed' if hyprland_check.rc == 0 else 'Missing' }}
          Omarchy Config: {{ 'Present' if omarchy_config_check.stat.exists else 'Missing' }}
          Remote Desktop: {{ 'Configured' if omarchy_enable_remote_desktop else 'Skipped' }}

          System ready for development work!

- name: Reboot system to ensure all services start properly
  ansible.builtin.reboot:
    reboot_timeout: 300
  delegate_to: "{{ omarchy_vm_automated.ip }}"
  vars:
    ansible_user: "{{ arch_user }}"
    ansible_ssh_pass: "{{ arch_password }}"
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
    ansible_become: yes
    ansible_become_pass: "{{ arch_password }}"