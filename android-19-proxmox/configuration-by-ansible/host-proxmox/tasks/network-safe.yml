---
# Safe Network Configuration - Wrapper with mandatory safety checks
#
# This file provides a safe interface for network configuration that:
# 1. ALWAYS runs preflight checks first
# 2. Validates interface existence
# 3. Creates backups
# 4. Requires explicit confirmation
# 5. Can be run in check mode for validation

- name: MANDATORY Pre-flight Network Safety Checks
  include_tasks: preflight-checks.yml
  tags:
    - network
    - safety
    - preflight

- name: Network Configuration (Safe Mode)
  block:
    - name: Verify this is not accidental execution
      ansible.builtin.pause:
        prompt: |
          üî• CRITICAL NETWORK CONFIGURATION WARNING üî•

          You are about to modify network configuration on {{ ansible_hostname }}.
          This operation can cause COMPLETE REMOTE LOCKOUT if misconfigured.

          Current network status has been verified in preflight checks above.

          Type 'CONFIRM_NETWORK_CHANGE' to proceed, or Ctrl+C to abort:
        echo: yes
      register: confirmation
      when: not ansible_check_mode

    - name: Abort if confirmation not provided
      ansible.builtin.fail:
        msg: "Network configuration aborted - confirmation not provided"
      when:
        - not ansible_check_mode
        - confirmation.user_input | default('') != 'CONFIRM_NETWORK_CHANGE'

    - name: Include actual network configuration
      include_tasks: network.yml
      when: proxmox_network_config_enabled | default(false)

  rescue:
    - name: Network configuration failed
      ansible.builtin.fail:
        msg: |
          ‚ùå NETWORK CONFIGURATION FAILED ‚ùå

          The network configuration task failed.
          Your current connection should still be working.

          To recover if you lost access:
          1. Access via physical console
          2. Restore backup: cp /etc/network/interfaces.backup.* /etc/network/interfaces
          3. Restart networking: systemctl restart networking

          Do NOT retry without fixing the configuration first.