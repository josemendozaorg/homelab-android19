---
# RGB/LED Light Control Tasks for Arctic Fans, CPU Cooler, and RAM
#
# This task file manages RGB lighting on the Proxmox host hardware using liquidctl:
# - Arctic fans
# - Arctic CPU cooler
# - RAM modules
#
# RGB control tasks:
# - Install liquidctl via pip3
# - Detect RGB hardware components via liquidctl
# - Turn lights on/off based on rgb_lights_state variable
# - Configure persistence across reboots via systemd service
#
# Tasks are executed when rgb_lights_enabled is true

- name: Ensure pip3 is installed
  apt:
    name: python3-pip
    state: present
    update_cache: yes
  become: true
  tags:
    - rgb
    - installation

- name: Install liquidctl via pip3
  pip:
    name: liquidctl
    state: present
    executable: pip3
    extra_args: --break-system-packages
  become: true
  tags:
    - rgb
    - installation

- name: Detect RGB hardware devices using liquidctl
  command: liquidctl list
  register: rgb_devices_detected
  failed_when: false
  changed_when: false
  tags:
    - rgb
    - detection

- name: Display detected RGB devices
  debug:
    var: rgb_devices_detected.stdout_lines
  when: rgb_devices_detected.rc == 0
  tags:
    - rgb
    - detection

- name: Turn all RGB lights off (ASUS Aura LED Controller)
  command: liquidctl --match 'ASUS' set {{ item }} color off
  loop:
    - led1
    - led2
    - led3
    - led4
  when: rgb_lights_state == "off"
  # liquidctl commands are idempotent - safe to run multiple times
  # We mark as unchanged since we can't reliably query current state
  changed_when: false
  tags:
    - rgb
    - control

- name: Turn all RGB lights on (ASUS Aura LED Controller - default rainbow)
  command: liquidctl --match 'ASUS' set {{ item }} color rainbow
  loop:
    - led1
    - led2
    - led3
    - led4
  when: rgb_lights_state == "on"
  # liquidctl commands are idempotent - safe to run multiple times
  # We mark as unchanged since we can't reliably query current state
  changed_when: false
  tags:
    - rgb
    - control

- name: Display RGB lights state confirmation
  debug:
    msg: |
      âœ“ RGB/LED lights have been set to: {{ rgb_lights_state | upper }}

      Affected components:
        - Arctic fans (ARGB headers 1-3)
        - Arctic CPU cooler (ARGB headers)
        - RAM modules (RGB header)

      State: {{ 'Rainbow cycling effect' if rgb_lights_state == 'on' else 'All lights off (black)' }}
  when: rgb_lights_state is defined and rgb_lights_state in ['on', 'off']
  tags:
    - rgb
    - control

- name: Create systemd service for RGB control persistence
  template:
    src: rgb-control.service.j2
    dest: /etc/systemd/system/rgb-control.service
    mode: '0644'
  become: true
  tags:
    - rgb
    - persistence

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  become: true
  tags:
    - rgb
    - persistence

- name: Enable RGB control service for autostart
  systemd:
    name: rgb-control.service
    enabled: yes
    # Note: We don't use state: started because:
    # 1. The RGB state is already set by the liquidctl commands above
    # 2. This is a oneshot service meant for boot-time persistence
    # 3. Starting it here would be redundant
  become: true
  tags:
    - rgb
    - persistence
