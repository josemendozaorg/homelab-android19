---
# RAM LED Control Tasks - Kingston HyperX Fury modules
#
# This task file provides INDEPENDENT control of RAM LED lights separate from
# Arctic cooling RGB control (led1-led3). Only targets led4 channel (RAM RGB header).
#
# Dependencies:
# - liquidctl already installed (via RGB control feature)
# - ASUS Aura LED Controller hardware
#
# Variables:
# - ram_lights_state: "on" or "off"
# - ram_lights_action: "status" to check current state (optional)
# - ram_lights_enabled: boolean to enable/disable this feature
#
# Important: This feature does NOT affect Arctic lights (led1, led2, led3)

# ============================================================================
# Dependency Check
# ============================================================================

- name: Check if liquidctl is installed
  command: liquidctl --version
  register: liquidctl_check
  failed_when: false
  changed_when: false
  tags:
    - ram
    - dependency

- name: Fail gracefully if liquidctl is not installed
  fail:
    msg: |
      ❌ ERROR: liquidctl is not installed on this system.

      RAM LED control requires liquidctl to communicate with the ASUS Aura LED Controller.

      📋 To fix this issue:
      1. Run the RGB control feature first, which installs liquidctl:
         make proxmox-rgb-lights-off

      2. Or manually install liquidctl on the Proxmox host:
         ssh root@192.168.0.19 'pip3 install liquidctl --break-system-packages'

      ℹ️  Note: liquidctl is a lightweight Python package that enables RGB hardware control.
            RAM LED control depends on the RGB control feature being configured first.
  when: liquidctl_check.rc != 0
  tags:
    - ram
    - dependency

# ============================================================================
# RAM LED Control Operations
# ============================================================================

- name: Turn RAM LEDs off (led4 channel only)
  command: liquidctl --match 'ASUS' set led4 color off
  when:
    - ram_lights_state == "off"
    - ram_lights_action is not defined or ram_lights_action != 'status'
  # liquidctl commands are idempotent - safe to run multiple times
  # We mark as unchanged since we can't reliably query current state
  changed_when: false
  tags:
    - ram
    - control

- name: Turn RAM LEDs on (led4 channel - rainbow effect)
  command: liquidctl --match 'ASUS' set led4 color rainbow
  when:
    - ram_lights_state == "on"
    - ram_lights_action is not defined or ram_lights_action != 'status'
  # liquidctl commands are idempotent - safe to run multiple times
  # We mark as unchanged since we can't reliably query current state
  changed_when: false
  tags:
    - ram
    - control

- name: Display RAM LED state confirmation
  debug:
    msg: |
      ✓ RAM LEDs have been set to: {{ ram_lights_state | upper }}

      Affected components:
        - Kingston HyperX Fury RAM (led4 channel only)

      State: {{ 'Rainbow cycling effect' if ram_lights_state == 'on' else 'All RAM LEDs off (black)' }}

      ⚠️  Arctic lights: UNCHANGED (led1, led2, led3 not affected)
  when:
    - ram_lights_state is defined and ram_lights_state in ['on', 'off']
    - ram_lights_action is not defined or ram_lights_action != 'status'
  tags:
    - ram
    - control

# ============================================================================
# Status Checking Tasks
# ============================================================================

- name: Check if RAM LED control service exists
  stat:
    path: /etc/systemd/system/ram-led-control.service
  register: ram_service_file
  when: ram_lights_action is defined and ram_lights_action == 'status'
  tags:
    - ram
    - status

- name: Get RAM LED control service status
  systemd:
    name: ram-led-control.service
  register: ram_service_status
  failed_when: false
  when:
    - ram_lights_action is defined and ram_lights_action == 'status'
    - ram_service_file.stat.exists
  tags:
    - ram
    - status

- name: Read RAM LED systemd service configuration
  slurp:
    path: /etc/systemd/system/ram-led-control.service
  register: ram_service_config
  when:
    - ram_lights_action is defined and ram_lights_action == 'status'
    - ram_service_file.stat.exists
  tags:
    - ram
    - status

- name: Check if RGB control service exists (for comparison)
  stat:
    path: /etc/systemd/system/rgb-control.service
  register: rgb_service_file
  when: ram_lights_action is defined and ram_lights_action == 'status'
  tags:
    - ram
    - status

- name: Read RGB systemd service configuration (for comparison)
  slurp:
    path: /etc/systemd/system/rgb-control.service
  register: rgb_service_config
  when:
    - ram_lights_action is defined and ram_lights_action == 'status'
    - rgb_service_file.stat.exists
  tags:
    - ram
    - status

- name: Display RAM LED status
  debug:
    msg: |
      ═══════════════════════════════════════════════════════════
      RAM LED STATUS
      ═══════════════════════════════════════════════════════════

      📦 Hardware:
            Kingston HyperX Fury RAM (led4 channel only)

      ⚙️  Systemd Service:
      {{ '      ✓ Service configured and enabled' if ram_service_file.stat.exists else '      ✗ Service not configured' }}
      {{ '      State: ' + ram_service_status.status.ActiveState | default('unknown') if ram_service_file.stat.exists else '' }}

      🎨 Configured RAM LED State (from service):
      {{ '      ON (rainbow effect)' if ram_service_file.stat.exists and 'rainbow' in (ram_service_config.content | b64decode) else '      OFF (all LEDs black)' if ram_service_file.stat.exists else '      Not configured' }}

      ───────────────────────────────────────────────────────────
      Arctic Lights Status (for comparison):
      ───────────────────────────────────────────────────────────

      ⚙️  RGB Control Service:
      {{ '      ✓ Service configured and enabled' if rgb_service_file.stat.exists else '      ✗ Service not configured' }}

      🎨 Configured Arctic Lights State:
      {{ '      ON (rainbow effect)' if rgb_service_file.stat.exists and 'rainbow' in (rgb_service_config.content | b64decode) else '      OFF (all LEDs black)' if rgb_service_file.stat.exists else '      Not configured' }}
      {{ '      Controls: Arctic fans and CPU cooler (led1-led3)' if rgb_service_file.stat.exists else '' }}

      ℹ️  Note: Actual LED states may differ if changed manually.
          This shows the configured states that persist across reboots.
      ═══════════════════════════════════════════════════════════
  when: ram_lights_action is defined and ram_lights_action == 'status'
  tags:
    - ram
    - status

- name: Create systemd service for RAM LED control persistence
  template:
    src: ram-led-control.service.j2
    dest: /etc/systemd/system/ram-led-control.service
    mode: '0644'
  become: true
  when: ram_lights_action is not defined or ram_lights_action != 'status'
  tags:
    - ram
    - persistence

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  become: true
  when: ram_lights_action is not defined or ram_lights_action != 'status'
  tags:
    - ram
    - persistence

- name: Enable RAM LED control service for autostart
  systemd:
    name: ram-led-control.service
    enabled: yes
    # Note: We don't use state: started because:
    # 1. The RAM LED state is already set by the liquidctl commands above
    # 2. This is a oneshot service meant for boot-time persistence
    # 3. Starting it here would be redundant
  become: true
  when: ram_lights_action is not defined or ram_lights_action != 'status'
  tags:
    - ram
    - persistence
